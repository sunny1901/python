"""
NumPy 算术运算
"""

import numpy as np


# 乘法

a = np.array([1, 2, 3, 4])
b = np.array([10, 20, 30, 40])
c = a * b
print( "数组乘法 arr1 * arr2")
print(c)

print( "数组乘法 arr1 + arr2")
c = a + b
print(c)


# 广播 ， 数组形状不同时，触发广播机制
"""
广播的规则: 
    1. 让所有输入数组都向其中形状最长的数组看齐  
    3. 如果输入数组的某个维度和输出数组的对应维度的长度相同或者其长度为 1 时，这个数组能够用来计算，否则出错。
    4. 当输入数组的某个维度的长度为 1 时，沿着此维度运算时都用此维度上的第一组值。
简单理解：对两个数组，分别比较他们的每一个维度（若其中一个数组没有当前维度则忽略），满足：
    数组拥有相同形状。
    当前维度的值相等。
"""
import numpy as np

a = np.array([[0, 0, 0],
              [10, 10, 10],
              [20, 20, 20],
              [30, 30, 30]])
b = np.array([1, 2, 3])
print(a + b)
print(a * b)

